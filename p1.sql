CREATE OR REPLACE TRIGGER valida_medico_efetivo
BEFORE INSERT OR UPDATE ON MEDICO_EFETIVO
FOR EACH ROW
DECLARE
crm  medico.crm%TYPE;
contrato  medico.TIPO_CONTRATO%TYPE;
BEGIN
     SELECT TIPO_CONTRATO into contrato
        FROM MEDICO
        where CRM = :NEW.CRM_EFETIVO;
IF contrato is null THEN
    RAISE_APPLICATION_ERROR ( -20001, 'Médico não encontrado');
ELSIF  LOWER(contrato) = 'residente' THEN
    RAISE_APPLICATION_ERROR ( -20002, 'Médico ainda residente');
END IF;
END;

CREATE OR REPLACE TRIGGER valida_medico_residente
BEFORE INSERT OR UPDATE ON MEDICO_RESIDENTE 
FOR EACH ROW
DECLARE
crm  medico.crm%TYPE;
contrato  medico.TIPO_CONTRATO%TYPE;
BEGIN
     SELECT TIPO_CONTRATO into contrato
        FROM MEDICO 
        where CRM = :NEW.CRM_RESIDENTE;
IF contrato is null THEN
    RAISE_APPLICATION_ERROR ( -20001, 'Médico não encontrado');
ELSIF  LOWER(contrato) = 'residente' THEN
    RAISE_APPLICATION_ERROR ( -20002, 'Médico não ');
END IF;
END;

CREATE OR REPLACE TRIGGER valida_internacao_quarto
BEFORE INSERT OR UPDATE ON INTERNACAO
FOR EACH ROW
DECLARE
status INTERNACAO.SITUACAO_INTERNACAO%TYPE;
BEGIN
   select SITUACAO_INTERNACAO into status
        FROM INTERNACAO
        WHERE NUM_LEITO = :NEW.NUM_LEITO AND NUM_QTO = :NEW.NUM_QTO;
  
IF status is NOT null AND UPPER(status) = 'ATIVA' THEN
    RAISE_APPLICATION_ERROR ( -20005, 'LEITO - QUARTO OCUPADO');
END IF;
END;



